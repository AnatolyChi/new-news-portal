<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns ="http://www.springframework.org/schema/beans"
       xmlns:xsi ="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security ="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/security
                https://www.springframework.org/schema/security/spring-security.xsd">

    <security:global-method-security pre-post-annotations="enabled"/>

    <security:http auto-config="true" use-expressions="true">
        <security:access-denied-handler error-page="/access_denied" />
        <security:intercept-url pattern="/welcome" access="isAnonymous()"/>
        <security:intercept-url pattern="/news/" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <security:intercept-url pattern="/news/add_news" access="hasRole('ROLE_ADMIN')"/>
        <security:csrf disabled="true"/>

        <security:form-login login-page="/login"
                             login-processing-url="/perform_login"
                             default-target-url="/news/"
                             authentication-failure-url="/login?error=true"
                             always-use-default-target="true"/>
        <security:logout logout-url="/perform_logout" logout-success-url="/welcome"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="myDataSource"
                    users-by-username-query="SELECT username, password, enabled FROM user WHERE username = ?"
                    authorities-by-username-query
                            ="SELECT username, role_name AS authority FROM user INNER JOIN user_role USING(user_id) INNER JOIN role USING(role_id) WHERE username = ?"/>
        </security:authentication-provider>
    </security:authentication-manager>

<!--    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>-->

</beans>